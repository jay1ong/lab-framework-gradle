javaPlatform {
    allowDependencies()
}

ext {
    // import
    springbootVersion = '2.6.1'
    springcloutVersion = '2021.0.0'
    // core
    springcloudstarterVersion = '3.1.0'
    springbootgradlepluginVersion = '2.6.0'
    hutoolVersion = '5.7.16'
    lombokVersion = '1.18.22'
    fastjsonVersion = '1.2.78'
    httpclientVersion = '4.5.13'
    archunitVersion = '0.22.0'
    mapstructVersion = '1.4.2.Final'
    swaggerV3Version = '2.1.10'
    swaggerVersion = '1.6.2'
    javaxannotationapiVersion = '1.3.2'
    // test
    junitVersion = '4.13.2'
    junitjupiterVersion = '5.7.2'
    // data-jpa
    querydslVersion = '5.0.0'
    hibernatetypes55Verison = '2.14.0'
    postgresqlVersion = '42.3.1'
    jakartapersistenceapiVersion = '2.2.3'
    javaxpersistenceapiVersion = '2.2'
    springdatajpaentitygraphVersion = '2.5.0'
    hibernatejpa21apiVersion = '1.0.2.Final'
    // web
    nacoscloudVersion = '2021.1'
    nacosclientVersion = '2.0.3'
    springfoxVersion = '3.0.0'
    axonframeworkVersion = '4.5.5'
    // mq
    springkafkaVersion = '2.7.6'
    // security
    springsecurityoauth2resourceserverVersion = '5.6.1'
    springsecurityoauth2joseVersion = '5.6.1'
}

dependencies {
    constraints {
        api("cn.jaylong:lab-autoconfig-gradle:$version")
        api("cn.jaylong:lab-axon-gradle:$version")
        api("cn.jaylong:lab-core-gradle:$version")
        api("cn.jaylong:lab-data-jpa-gradle:$version")
        api("cn.jaylong:lab-mq-gradle:$version")
        api("cn.jaylong:lab-security-gradle:$version")
        api("cn.jaylong:lab-snowflake-gradle:$version")
        api("cn.jaylong:lab-web-gradle:$version")
//        // core
        api("cn.hutool:hutool-all:$hutoolVersion")
        api("org.projectlombok:lombok:$lombokVersion")
        api("com.alibaba:fastjson:$fastjsonVersion")
        api("org.springframework.boot:spring-boot-starter-freemarker:$springbootVersion")
        api("org.springframework.boot:spring-boot-starter-thymeleaf:$springbootVersion")
        api("org.springframework.boot:spring-boot-starter-validation:$springbootVersion")
        api("org.springframework.boot:spring-boot-starter:$springbootVersion")
        api("org.springframework.boot:spring-boot-starter-test:$springbootVersion")
        api("org.springframework.boot:spring-boot-autoconfigure:$springbootVersion")
        api("org.springframework.boot:spring-boot-configuration-processor:$springbootVersion")
        api("org.springframework.cloud:spring-cloud-starter-bootstrap:$springcloudstarterVersion")
        api("org.springframework.cloud:spring-cloud-starter:$springcloudstarterVersion")
        api("org.springframework.boot:spring-boot-gradle-plugin:$springbootgradlepluginVersion")
        api("org.apache.httpcomponents:httpclient:$httpclientVersion")
        api("com.tngtech.archunit:archunit:$archunitVersion")
        api("org.mapstruct:mapstruct:$mapstructVersion")
        api("org.mapstruct:mapstruct-processor:$mapstructVersion")
        api("javax.annotation:javax.annotation-api:$javaxannotationapiVersion")
        api("junit:junit:$junitVersion")
        api("org.junit.jupiter:junit-jupiter-api:$junitjupiterVersion")
        api("org.junit.jupiter:junit-jupiter-engine:$junitjupiterVersion")
        // data-jpa
        api("com.querydsl:querydsl-apt:$querydslVersion")
        api("com.querydsl:querydsl-apt:$querydslVersion:jpa")
        api("com.querydsl:querydsl-jpa:$querydslVersion")
        api("com.querydsl:querydsl-sql-codegen:$querydslVersion")
        api("org.hibernate.javax.persistence:hibernate-jpa-2.1-api:$hibernatejpa21apiVersion")
        api("com.vladmihalcea:hibernate-types-55:$hibernatetypes55Verison")
        api("org.postgresql:postgresql:$postgresqlVersion")
        api("org.springframework.boot:spring-boot-starter-data-jpa:$springbootVersion")
        api("jakarta.persistence:jakarta.persistence-api:$jakartapersistenceapiVersion")
        api("javax.persistence:javax.persistence-api:$javaxpersistenceapiVersion")
        api("com.cosium.spring.data:spring-data-jpa-entity-graph:$springdatajpaentitygraphVersion")
        // web
        api("com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:$nacoscloudVersion")
        api("com.alibaba.nacos:nacos-client:$nacosclientVersion")
        api("com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config:$nacoscloudVersion")
        api("org.springframework.boot:spring-boot-starter-web:$springbootVersion")
        api("io.springfox:springfox-boot-starter:$springfoxVersion")
        api("org.springframework.boot:spring-boot-starter-undertow:$springbootVersion")
        // axon
        api("org.axonframework:axon-modelling:$axonframeworkVersion")
        api("org.axonframework:axon-spring-boot-starter:$axonframeworkVersion")
        api("org.axonframework:axon-test:$axonframeworkVersion")
        // mq
        api("org.springframework.kafka:spring-kafka:$springkafkaVersion")
        // security
        api("org.springframework.boot:spring-boot-starter-security:$springbootVersion")
        api("org.springframework.security:spring-security-oauth2-resource-server:$springsecurityoauth2resourceserverVersion")
        api("org.springframework.security:spring-security-oauth2-jose:$springsecurityoauth2joseVersion")
    }
}
